# Use Case:
# As a developer, I want to perform automatic releases using semantic versioning so I can 
#   - keep a consistent release strategy
#   - keep a consistent versioning pattern
#   - automate changelog generation for documentation
#   - automate github release management

name: release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    env: {}
    steps:
      - uses: actions/checkout@v3
      # Simulate building actual code
      - run: |
          mkdir -p release
          cat << EOF >> mytool
          #!/usr/bin/env bash
          
          set -eo pipefail
          
          echo "Hello, World!"
          EOF
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: |
          cat << EOF > .releaserc.json 
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              [
                "@semantic-release/exec",
                {
                  "prepareCmd": "echo \"${nextRelease.version}\" > VERSION; git add VERSION; mkdir -p release; cp VERSION release/VERSION"
                }
              ],
              [
                "@semantic-release/git",
                {
                  "assets": [
                    "CHANGELOG.md"
                  ]
                }
              ],
              [
                "@semantic-release/github",
                {
                  "assets": [
                    { "path": "release/**", "label": "Release Artifacts" }
                  ]
                }
              ]
            ]
          }
          EOF

          npm install -g \
            semantic-release \
            @semantic-release/changelog \
            @semantic-release/exec \
            @semantic-release/git
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: "shopentrance-bot"
          GIT_AUTHOR_EMAIL: "shozu+bots@otto.de"
          GIT_COMMITTER_NAME: "shopentrance-bot"
          GIT_COMMITTER_EMAIL: "shozu+bots@otto.de"
